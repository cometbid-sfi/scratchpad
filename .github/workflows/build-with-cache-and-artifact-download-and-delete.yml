name: Node.js CI - with cache and artifact download and delete

on:
  workflow_dispatch:
  push:

run-name: Cache, artifact and download test by ${{ github.actor }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Restore Cache
      id: cache-npm
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Use Node.js 22.x
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm install express
        npm install --save-dev jest supertest
        npm ci
    
    - name: Run tests
      run: npm test  

    - name: Build
      run: npm run build --if-present
    
    - name: Save npm cache
      if: steps.cache-npm.outputs.cache-hit != 'true'
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: my-app
        path: |
          dist/
          build/
          !dist/**/*.md
          !build/**/*.md
        retention-days: 1
    
  deploy-job:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: my-app
          path: dist

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: dist
    
      - name: Delete artifact
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            for (const artifact of artifacts.data.artifacts) {
              if (artifact.name === 'my-app') {
                console.log('Deleting artifact:', artifact.name);
                await github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id,
                });
              }
            }